{"version":3,"file":"ListView-1b370206.mjs","sources":["../../admin/src/pages/Settings/pages/TransferTokens/ListView.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { ContentLayout, HeaderLayout, LinkButton, Main } from '@strapi/design-system';\nimport {\n  CheckPagePermissions,\n  NoContent,\n  NoPermissions,\n  SettingsPageTitle,\n  useFetchClient,\n  useFocusWhenNavigate,\n  useGuidedTour,\n  useNotification,\n  useRBAC,\n  useTracking,\n} from '@strapi/helper-plugin';\nimport { Plus } from '@strapi/icons';\nimport { Entity } from '@strapi/types';\nimport { AxiosError } from 'axios';\nimport qs from 'qs';\nimport { useIntl } from 'react-intl';\nimport { useMutation, useQuery } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { selectAdminPermissions } from '../../../../selectors';\nimport { TRANSFER_TOKEN_TYPE } from '../../components/Tokens/constants';\nimport { Table } from '../../components/Tokens/Table';\n\nconst tableHeaders = [\n  {\n    name: 'name',\n    key: 'name',\n    metadatas: {\n      label: {\n        id: 'Settings.tokens.ListView.headers.name',\n        defaultMessage: 'Name',\n      },\n      sortable: true,\n    },\n  },\n  {\n    name: 'description',\n    key: 'description',\n    metadatas: {\n      label: {\n        id: 'Settings.tokens.ListView.headers.description',\n        defaultMessage: 'Description',\n      },\n      sortable: false,\n    },\n  },\n  {\n    name: 'createdAt',\n    key: 'createdAt',\n    metadatas: {\n      label: {\n        id: 'Settings.tokens.ListView.headers.createdAt',\n        defaultMessage: 'Created at',\n      },\n      sortable: false,\n    },\n  },\n  {\n    name: 'lastUsedAt',\n    key: 'lastUsedAt',\n    metadatas: {\n      label: {\n        id: 'Settings.tokens.ListView.headers.lastUsedAt',\n        defaultMessage: 'Last used',\n      },\n      sortable: false,\n    },\n  },\n] as const;\n\n/* -------------------------------------------------------------------------------------------------\n * ListView\n * -----------------------------------------------------------------------------------------------*/\n\nconst ListView = () => {\n  useFocusWhenNavigate();\n  const { formatMessage } = useIntl();\n  const toggleNotification = useNotification();\n  const permissions = useSelector(selectAdminPermissions);\n  const {\n    allowedActions: { canCreate, canDelete, canUpdate, canRead },\n    // @ts-expect-error this is fine\n  } = useRBAC(permissions.settings['transfer-tokens']);\n  const { push } = useHistory();\n  const { trackUsage } = useTracking();\n\n  const { startSection } = useGuidedTour();\n  const startSectionRef = React.useRef(startSection);\n  const { get, del } = useFetchClient();\n\n  React.useEffect(() => {\n    if (startSectionRef.current) {\n      startSectionRef.current('transferTokens');\n    }\n  }, []);\n\n  React.useEffect(() => {\n    push({ search: qs.stringify({ sort: 'name:ASC' }, { encode: false }) });\n  }, [push]);\n\n  const headers = tableHeaders.map((header) => ({\n    ...header,\n    metadatas: {\n      ...header.metadatas,\n      label: formatMessage(header.metadatas.label),\n    },\n  }));\n\n  const {\n    data: transferTokens,\n    status,\n    isFetching,\n    refetch,\n  } = useQuery(\n    ['transfer-tokens'],\n    async () => {\n      trackUsage('willAccessTokenList', {\n        tokenType: TRANSFER_TOKEN_TYPE,\n      });\n      const {\n        data: { data },\n      } = await get(`/admin/transfer/tokens`);\n\n      trackUsage('didAccessTokenList', { number: data.length, tokenType: TRANSFER_TOKEN_TYPE });\n\n      return data;\n    },\n    {\n      enabled: canRead,\n      onError(err) {\n        if (err instanceof AxiosError) {\n          if (err?.response?.data?.error?.details?.code === 'INVALID_TOKEN_SALT') {\n            toggleNotification({\n              type: 'warning',\n              message: {\n                id: 'notification.error.invalid.configuration',\n                defaultMessage:\n                  'You have an invalid configuration, check your server log for more information.',\n              },\n            });\n          } else {\n            toggleNotification({\n              type: 'warning',\n              message: { id: 'notification.error', defaultMessage: 'An error occured' },\n            });\n          }\n        }\n      },\n    }\n  );\n\n  const isLoading =\n    canRead &&\n    ((status !== 'success' && status !== 'error') || (status === 'success' && isFetching));\n\n  const deleteMutation = useMutation(\n    async (id: Entity.ID) => {\n      await del(`/admin/transfer/tokens/${id}`);\n    },\n    {\n      async onSuccess() {\n        // @ts-expect-error this is fine\n        await refetch(['transfer-tokens']);\n      },\n      onError(err) {\n        if (err instanceof AxiosError) {\n          if (err?.response?.data?.data) {\n            toggleNotification({ type: 'warning', message: err.response.data.data });\n          } else if (err?.response?.data?.error?.details?.code === 'INVALID_TOKEN_SALT') {\n            toggleNotification({\n              type: 'warning',\n              message: {\n                id: 'notification.error.invalid.configuration',\n                defaultMessage:\n                  'You have an invalid configuration, check your server log for more information.',\n              },\n            });\n          } else {\n            toggleNotification({\n              type: 'warning',\n              message: { id: 'notification.error', defaultMessage: 'An error occured' },\n            });\n          }\n        }\n      },\n    }\n  );\n\n  const hasTransferTokens = transferTokens && transferTokens?.length > 0;\n  const shouldDisplayDynamicTable = canRead && hasTransferTokens;\n  const shouldDisplayNoContent = canRead && !hasTransferTokens && !canCreate;\n  const shouldDisplayNoContentWithCreationButton = canRead && !hasTransferTokens && canCreate;\n\n  return (\n    <Main aria-busy={isLoading}>\n      <SettingsPageTitle name=\"Transfer Tokens\" />\n      <HeaderLayout\n        title={formatMessage({\n          id: 'Settings.transferTokens.title',\n          defaultMessage: 'Transfer Tokens',\n        })}\n        subtitle={formatMessage({\n          id: 'Settings.transferTokens.description',\n          defaultMessage: '\"List of generated transfer tokens\"', // TODO change this message\n        })}\n        primaryAction={\n          canCreate ? (\n            <LinkButton\n              data-testid=\"create-transfer-token-button\"\n              startIcon={<Plus />}\n              size=\"S\"\n              onClick={() =>\n                trackUsage('willAddTokenFromList', {\n                  tokenType: TRANSFER_TOKEN_TYPE,\n                })\n              }\n              to=\"/settings/transfer-tokens/create\"\n            >\n              {formatMessage({\n                id: 'Settings.transferTokens.create',\n                defaultMessage: 'Create new Transfer Token',\n              })}\n            </LinkButton>\n          ) : undefined\n        }\n      />\n      <ContentLayout>\n        {!canRead && <NoPermissions />}\n        {shouldDisplayDynamicTable && (\n          <Table\n            permissions={{ canRead, canDelete, canUpdate }}\n            headers={headers}\n            contentType=\"trasfer-tokens\"\n            isLoading={isLoading}\n            onConfirmDelete={(id) => deleteMutation.mutateAsync(id)}\n            tokens={transferTokens}\n            tokenType={TRANSFER_TOKEN_TYPE}\n          />\n        )}\n        {shouldDisplayNoContentWithCreationButton && (\n          <NoContent\n            content={{\n              id: 'Settings.transferTokens.addFirstToken',\n              defaultMessage: 'Add your first Transfer Token',\n            }}\n            action={\n              <LinkButton\n                variant=\"secondary\"\n                startIcon={<Plus />}\n                to=\"/settings/transfer-tokens/create\"\n              >\n                {formatMessage({\n                  id: 'Settings.transferTokens.addNewToken',\n                  defaultMessage: 'Add new Transfer Token',\n                })}\n              </LinkButton>\n            }\n          />\n        )}\n        {shouldDisplayNoContent && (\n          <NoContent\n            content={{\n              id: 'Settings.transferTokens.emptyStateLayout',\n              defaultMessage: 'You donâ€™t have any content yet...',\n            }}\n          />\n        )}\n      </ContentLayout>\n    </Main>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ProtectedListView\n * -----------------------------------------------------------------------------------------------*/\n\nconst ProtectedListView = () => {\n  const permissions = useSelector(selectAdminPermissions);\n\n  return (\n    <CheckPagePermissions permissions={permissions.settings?.['transfer-tokens'].main}>\n      <ListView />\n    </CheckPagePermissions>\n  );\n};\n\nexport { ListView, ProtectedListView };\n"],"names":["qs"],"mappings":"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"}